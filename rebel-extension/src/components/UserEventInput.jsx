import { useState } from "react";
import "./css/UserEvents.css";

/**
 * UserEventInput Component
 *
 * A form interface that allows users to create a custom event and store it
 * in Chrome local storage. Events include fields such as title, description,
 * date, optional start/end times, and location. 
 *
 * If a time is entered, the event is marked as not all-day.
 * Notifies the background script after saving for live updates.
 * 
 * Authored by: Sebastian Yepez
 * Documentation generated by ChatGPT
 * 
 */
const UserEventInput = () => {
    const [eventTitle, setEventTitle] = useState("");
    const [eventDesc, setEventDesc] = useState("");
    const [eventDate, setEventDate] = useState("");
    const [eventStartTime, setEventStartTime] = useState("");
    const [eventEndTime, setEventEndTime] = useState("");
    const [eventLocation, setEventLocation] = useState("");
    const [isAllDay, setIsAllDay] = useState(true);

    /**
     * Validates the event fields and saves the new event to Chrome local storage.
     * Also resets the form and sends a message to notify other components.
     */
    const saveEvent = () => {
        // Basic input validation
        if (!eventTitle.trim()) {
            alert("Please enter a valid title.");
            return;
        } else if (!eventDate.trim()) {
            alert("Please enter a date.");
            return;
        } else if (!isAllDay) {
            if (!eventStartTime.trim() && eventEndTime.trim()) {
                alert("Please enter a start time.");
                return;
            } else if (!eventEndTime.trim() && eventStartTime.trim()) {
                alert("Please enter an end time.");
                return;
            }
        }

        const newEvent = {
            title: eventTitle,
            desc: eventDesc,
            date: eventDate,
            startTime: isAllDay ? "" : eventStartTime,
            endTime: isAllDay ? "" : eventEndTime,
            location: eventLocation,
            allDay: isAllDay,
        };

        // Fetch and update stored events
        chrome.storage.local.get("user-def-events", (data) => {
            const existing = Array.isArray(data["user-def-events"]) ? data["user-def-events"] : [];
            const updatedEvents = [...existing, newEvent];

            chrome.storage.local.set({ "user-def-events": updatedEvents }, () => {
                alert("Your event has been securely saved.");
                resetForm();

                // Notify background script and other components
                chrome.runtime.sendMessage({ type: "EVENT_CREATED" });
            });
        });
    };

    /**
     * Clears all input fields and resets isAllDay flag.
     */
    const resetForm = () => {
        setEventTitle("");
        setEventDesc("");
        setEventDate("");
        setEventStartTime("");
        setEventEndTime("");
        setEventLocation("");
        setIsAllDay(true);
    };

    return (
        <div className="mx-auto bg-white rounded shadow-md text-center" style={{ padding: "10px" }}>
            <h3 className="text-xl font-semibold" style={{ marginTop: "10px", marginBottom: "10px" }}>
                Create an Event
            </h3>

            <div className="text-inputs">
                <input
                    type="text"
                    placeholder="Event Title"
                    value={eventTitle}
                    onChange={(e) => setEventTitle(e.target.value)}
                    className="border rounded p-2 event-title"
                />
                <textarea
                    placeholder="Event Description"
                    value={eventDesc}
                    onChange={(e) => setEventDesc(e.target.value)}
                    className="border rounded mb-2 p-2 event-desc-input"
                />
            </div>

            <div className="event-row mb-2">
                {/* Left Column */}
                <div className="event-col-left">
                    <input
                        type="date"
                        value={eventDate}
                        onChange={(e) => setEventDate(e.target.value)}
                        className="border event-input mb-2 p-2"
                    />
                    <input
                        type="text"
                        placeholder="Location"
                        value={eventLocation}
                        onChange={(e) => setEventLocation(e.target.value)}
                        className="border event-input mb-2 p-2"
                    />
                </div>

                {/* Right Column */}
                <div className="event-col-right">
                    <div className="time-row">
                        <label htmlFor="startTime" className="time-label">Start:</label>
                        <input
                            type="time"
                            value={eventStartTime}
                            onChange={(e) => {
                                const value = e.target.value;
                                setEventStartTime(value);
                                setIsAllDay(!(value || eventEndTime));
                            }}
                            className="event-input"
                            id="startTime"
                        />
                    </div>

                    <div className="time-row">
                        <label htmlFor="endTime" className="time-label">End:</label>
                        <input
                            type="time"
                            value={eventEndTime}
                            onChange={(e) => {
                                const value = e.target.value;
                                setEventEndTime(value);
                                setIsAllDay(!(value || eventStartTime));
                            }}
                            className="event-input"
                            id="endTime"
                        />
                    </div>
                </div>
            </div>

            <button
                onClick={saveEvent}
                className="w-full bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded"
                style={{ marginBottom: "10px" }}
            >
                Save Event
            </button>
        </div>
    );
};

export default UserEventInput;
