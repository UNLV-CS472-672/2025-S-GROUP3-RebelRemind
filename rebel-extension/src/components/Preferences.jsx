/**
 * Preferences Component
 *
 * This component allows users to toggle and save preferences, including:
 * - Dark Mode
 * - Notifications
 * - Canvas Integration
 *
 * It interacts with Chrome Storage to persist user settings and allows
 * the user to retrieve their preferences on demand.
 *
 * Authored by: Sebastian Yepez
 *
 * Documentation generated by ChatGPT
 *
 * @component
 * @param {Object} props - The props object.
 * @param {Object} props.user - The authenticated user object.
 * @param {string} props.user.name - User's name.
 * @param {string} props.user.email - User's email.
 * @param {string} props.user.picture - URL of the user's profile picture.
 * @param {Object} props.preferences - The user's stored preferences.
 * @param {boolean} props.preferences.darkMode - Whether dark mode is enabled.
 * @param {boolean} props.preferences.notifications - Whether notifications are enabled.
 * @param {boolean} props.preferences.canvasIntegration - Whether Canvas integration is enabled.
 * @param {Function} props.setPreferences - Function to update user preferences.
 * @returns {JSX.Element} The Preferences UI.
 */
const Preferences = ({ user, preferences, setPreferences }) => {
  /**
   * Toggles a preference state.
   * Updates the corresponding preference in the `preferences` object.
   *
   * @param {string} key - The preference key to toggle (e.g., "darkMode", "notifications").
   */
  const handlePreferenceChange = (key) => {
    setPreferences((prev) => ({
      ...prev,
      [key]: !prev[key], // Toggle boolean value
    }));
  };

  /**
   * Saves user preferences to Chrome Storage.
   * This ensures preferences persist across extension reloads.
   */
  const savePreferences = () => {
    chrome.storage.sync.set({ preferences }, () => {
      console.log("Preferences saved:", preferences);
      alert("Preferences saved!");
    });
  };

  /**
   * Requests the user's preferences from `background.js`
   * and displays them in an alert box.
   */
  const viewPreferences = () => {
    chrome.runtime.sendMessage({ type: "GET_PREFERENCES" }, (response) => {
      if (response && response.preferences) {
        alert(`Your Preferences:\n
                    - Dark Mode: ${
                      response.preferences.darkMode ? "Enabled" : "Disabled"
                    }\n
                    - Notifications: ${
                      response.preferences.notifications
                        ? "Enabled"
                        : "Disabled"
                    }\n
                    - Canvas Integration: ${
                      response.preferences.canvasIntegration
                        ? "Enabled"
                        : "Disabled"
                    }`);
      } else {
        alert("No preferences saved.");
      }
    });
  };

  return (
    <div>
      {/* User Profile Section */}
      <img
        src={user.picture}
        alt="Profile"
        width="80"
        className="rounded-full mx-auto"
      />
      <h3 className="text-lg font-bold">{user.name}</h3>
      <p className="text-gray-600">{user.email}</p>

      {/* Preferences Checklist */}
      <div className="mt-4 text-left">
        <h3 className="font-semibold">Preferences</h3>
        <label>
          <input
            type="checkbox"
            checked={preferences.darkMode}
            onChange={() => handlePreferenceChange("darkMode")}
          />
          Enable Dark Mode
        </label>
        <br />
        <label>
          <input
            type="checkbox"
            checked={preferences.notifications}
            onChange={() => handlePreferenceChange("notifications")}
          />
          Enable Notifications
        </label>
        <br />
        <label>
          <input
            type="checkbox"
            checked={preferences.canvasIntegration}
            onChange={() => handlePreferenceChange("canvasIntegration")}
          />
          Enable Canvas Integration
        </label>
      </div>

      {/* Buttons */}
      <div className="mt-4">
        <br />
        <button
          className="mt-4 bg-blue-500 text-white p-2 rounded"
          onClick={savePreferences}
        >
          Save Preferences
        </button>
        <br />
        <button
          className="mt-4 bg-gray-500 text-white p-2 rounded"
          onClick={viewPreferences}
        >
          View Preferences
        </button>
      </div>
    </div>
  );
};

export default Preferences;
