/**
 * Counter Script for Handling Count-Related API Requests
 *
 * This script contains functions to send and retrieve count-related data
 * from the backend. It does not contain event listeners, as they are managed in background.js.
 *
 * Authored by: Billy Estrada
 *
 * Documentation generated by ChatGPT
 */

/**
 * Handles requests to post a count value to the backend.
 * @param {Object} message - The message received from the content script.
 * @param {Function} sendResponse - The callback function to send the response.
 */
export function handlePostCount(message, sendResponse) {
  fetch("http://localhost:3001/count", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ count: message.count }),
  })
    .then((res) => res.json())
    .then((data) => sendResponse({ message: data.message }))
    .catch((err) => {
      console.error("Error posting count:", err);
      sendResponse({ message: "Error fetching data" });
    });
}

/**
 * Handles requests to fetch the user's schedule from the backend.
 * @param {Function} sendResponse - The callback function to send the response.
 */
export function handleGetSchedule(sendResponse) {
  fetch("http://localhost:3001/schedule", {
    method: "GET",
    headers: { "Content-Type": "application/json" },
  })
    .then((res) => res.json())
    .then((data) => sendResponse({ message: data.message }))
    .catch((err) => {
      console.error("Error fetching schedule:", err);
      sendResponse({ message: "Error fetching data" });
    });
}
